@page "/Login"
@using Addition_API.Data
@using Addition_API.DAO
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime;

<div class="row">
    <div class="col-sm-1"></div>
    <div class="col-sm-10">
        <div class="card border-primary mb-3">
            <div class="card-header"><h2>Login</h2></div>
            <div class="card-body">
                <fieldset>
                    <div class="form-group row">
                        <label for="txtUserId" class="col-sm-2 col-form-label">帳號：</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="txtUserId" @bind="oUser.UserId">
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="txtPW" class="col-sm-2 col-form-label">密碼：</label>
                        <div class="col-sm-10">
                            <input type="password" class="form-control" id="txtPW" @bind="oUser.PW">
                        </div>
                    </div>
                </fieldset>
            </div>
            <div class="card-footer text-right">
                <button class="btn btn-primary" @onclick="(()=>doLogin())">登入</button>
            </div>
        </div>

    </div>
    <div class="col-sm-1"></div>
</div>

@code {
    private UserVM oUser = new UserVM();

    private void doLogin()
    {
        try
        {
            ((CustomAuthenticationStateProvider)AuthenticationStateProvider).MarkUserAsLogin(oUser);
            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            JsRuntime.InvokeVoidAsync("alert", ex.Message);

        }
    }

}